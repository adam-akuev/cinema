services:
  postgres:
    container_name: postgres
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      backend:
        aliases:
          - "postgres"
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: 0095
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      backend:
        aliases:
          - "pgAdmin"
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    restart: always
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: password
    volumes:
      - keycloak_data:/opt/keycloak/data
    ports:
      - "8080:8080"
    networks:
      backend:
        aliases:
          - "keycloak"
    depends_on:
      - postgres
    command:
      - start-dev

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      backend:
        aliases:
          - "zookeeper"

  kafkaserver:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=dresses:1:1, ratings:1:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper
    networks:
      backend:
        aliases:
          - "kafka"

  redisserver:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      backend:
        aliases:
          - "redis"

  elasticsearch:
    image: elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      backend:
        aliases:
          - "elasticsearch"

  kibana:
    image: kibana:7.17.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      backend:
        aliases:
          - "kibana"

  logstash:
    image: logstash:7.17.0
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch
    networks:
      backend:
        aliases:
          - "logstash"


  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    environment:
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      backend:
        aliases:
          - "zipkin"

  config-service:
    container_name: config-service
    image: cinema/config-server:1.0-SNAPSHOT
    ports:
      - "8888:8888"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      ENCRYPT_KEY: ${ENCRYPT_KEY}
    networks:
      - backend
    restart: unless-stopped

  eureka-server:
    container_name: eureka-server
    image: cinema/eureka-server:1.0-SNAPSHOT
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_CLOUD_CONFIG_URI: http://config-service:8888
      SPRING_APPLICATION_NAME: eureka-server
    networks:
      backend:
        aliases:
          - "eureka"
    depends_on:
      - config-service
    restart: unless-stopped

  api-gateway:
    container_name: api-gateway
    image: cinema/gateway:1.0-SNAPSHOT
    ports:
      - "8084:8084"

    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_CLOUD_CONFIG_URI: http://config-service:8888
      SPRING_APPLICATION_NAME: gateway-server
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    networks:
      backend:
        aliases:
          - "gateway"
    depends_on:
      - config-service
      - eureka-server
    restart: unless-stopped

  movie-service:
    container_name: movie-service
    image: cinema/movie:1.0-SNAPSHOT
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_CLOUD_CONFIG_URI: http://config-service:8888
      SPRING_APPLICATION_NAME: movie-service
    networks:
      backend:
        aliases:
          - "movie"
    depends_on:
      - postgres
      - config-service
    restart: unless-stopped

  booking-service:
    container_name: booking-service
    image: cinema/booking:1.0-SNAPSHOT
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_CLOUD_CONFIG_URI: http://config-service:8888
      SPRING_APPLICATION_NAME: booking-service
    networks:
      backend:
        aliases:
          - "booking"
    depends_on:
      - postgres
      - config-service
    restart: unless-stopped

  user-service:
    container_name: user-service
    image: cinema/user:1.0-SNAPSHOT
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_CLOUD_CONFIG_URI: http://config-service:8888
      SPRING_APPLICATION_NAME: user-service
    networks:
      backend:
        aliases:
          - "user"
    depends_on:
      - postgres
      - config-service
    restart: unless-stopped

networks:
  backend:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  keycloak_data:
  esdata1: